plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.igsaas'
version = '0.0.2-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation("io.grpc:grpc-protobuf:1.71.0")
    implementation("io.grpc:grpc-stub:1.71.0")
    implementation 'com.google.protobuf:protobuf-java:3.19.6'
    implementation 'com.salesforce.servicelibs:reactor-grpc-stub:1.0.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'io.swagger:swagger-annotations:1.6.8'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc:3.3.2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.22.3"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.54.0"
        }
        reactorGrpc {
            artifact = "com.salesforce.servicelibs:reactor-grpc:1.0.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            reactorGrpc {}
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("buildJar", Jar) {
    archiveBaseName.set("igsaas-common-core")
    from(sourceSets.main.output)
}

publishing {
    publications {
        gpr(MavenPublication) {
            from(components.java)
            groupId = project.group
            artifactId = "common-core"
            version = project.version

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/igsaas-demo-microservice/common-core")
            credentials {
                username = System.getenv("GITHUB_USERNAME") ?: ""
                password = System.getenv("GITHUB_TOKEN") ?: ""
            }
        }
    }
}
