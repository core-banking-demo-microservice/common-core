plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'maven-publish'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.igsaas'
version = '0.0.2-SNAPSHOT'

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(21))
	}
}

repositories {
	mavenCentral()
}

ext {
	protobufVersion = '3.25.1'
	grpcVersion = '1.58.0'
	reactorGrpcVersion = '1.2.4'
}

dependencies {
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "com.salesforce.servicelibs:reactor-grpc-stub:${reactorGrpcVersion}"
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'io.swagger:swagger-annotations:1.6.8'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
		reactorGrpc {
			artifact = "com.salesforce.servicelibs:reactor-grpc:${reactorGrpcVersion}"
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
				reactorGrpc {}
			}
			task.builtins {
				java {}
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/java'
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/reactor'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	archiveClassifier.set("sources")
}

publishing {
	publications {
		gpr(MavenPublication) {
			from components.java
			artifact sourceJar
			groupId = project.group
			artifactId = "common-core"
			version = project.version
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/igsaas-demo-microservice/common-core")
			credentials {
				username = System.getenv("GITHUB_USERNAME") ?: ""
				password = System.getenv("GITHUB_TOKEN") ?: ""
			}
		}
	}
}